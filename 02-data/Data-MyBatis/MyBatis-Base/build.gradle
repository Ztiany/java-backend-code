group 'me.ztiany'
version '1.0'

apply plugin: 'java'

// 根据 SQL 生成 POJO、Mapper、和 xml 映射文件，参考：https://github.com/kimichen13/mybatis-generator-plugin
apply plugin: "com.thinkimi.gradle.MybatisGenerator"

sourceCompatibility = 1.8

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    //逆向工程
    dependencies {
        classpath "gradle.plugin.com.thinkimi.gradle:mybatis-generator-plugin:2.4"
    }
}

// MybatisGenerator 的配置
configurations {
    mybatisGenerator
}

// MybatisGenerator 的配置，指定配置文件位置
mybatisGenerator {
    verbose = true
    configFile = 'src/main/resources/generatorConfig.xml'
}

repositories {
    maven {
        url "https://plugins.gradle.org/m2/"
    }
}


dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    //test
    testCompile testLibs.junit
    //Spring核心架构
    //core
    compile springLibs.springCore
    compile springLibs.springBeans
    compile springLibs.springExpression
    compile springLibs.springContext
    //aop
    compile springLibs.springAop
    compile springLibs.springAspects
    compile springLibs.aspectJweaver
    //database
    //compile springLibs.springJdbc
    compile springLibs.springTx
    //test
    testCompile springLibs.springTest
    /*数据库*/
    compile dataBaseLibs.mysqlConnector
    compile dataBaseLibs.dbcp2
    compile dataBaseLibs.mybatis
    compile dataBaseLibs.mybatisSpring
    /*第三方二级缓存*/
    compile dataBaseLibs.mybatisEhcache
    /*分页插件*/
    compile dataBaseLibs.myBatisPagerHelper
    /*日志库，不依赖则不会有日志*/
    compile logLibs.log4jV1
    compile logLibs.logback
}