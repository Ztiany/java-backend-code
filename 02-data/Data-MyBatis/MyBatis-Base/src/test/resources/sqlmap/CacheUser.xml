<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
配置说明：
    namespace：名称空间【生产环境下推荐指定为接口的全类名】
    id：唯一标识
    resultType：返回值类型
    #{id}：从传递过来的参数中取出id值
 -->

<!--  namespace="test" 用于精确定位内部的sql语句，防止冲突 -->
<mapper namespace="test">

    <!--开启二级缓存-->
    <cache type="org.mybatis.caches.ehcache.EhcacheCache"/>

    <!--resultType会自动映射，要求返回值和表的列名一一对应-->
    <select id="findUserById" parameterType="Integer" resultType="me.ztiany.mybatis.pojo.CacheUser">
        SELECT *
        FROM user
        WHERE id = #{v}
    </select>

    <select id="findUserByUsername" parameterType="String" resultType="me.ztiany.mybatis.pojo.CacheUser">
        SELECT *
        FROM user
        WHERE username LIKE "%"#{haha}"%"
    </select>

    <update id="updateUserById" parameterType="me.ztiany.mybatis.pojo.CacheUser">
        UPDATE user
        SET username = #{username},
            sex      = #{sex},
            birthday = #{birthday},
            address  = #{address}
        WHERE id = #{id}
    </update>

</mapper>