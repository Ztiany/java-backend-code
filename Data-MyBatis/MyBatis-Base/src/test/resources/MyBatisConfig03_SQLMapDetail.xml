<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
    PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-config.dtd">

<configuration>

    <!--
        1、配置属性：读取 dp.properties 中的属性
     -->
    <properties resource="db.properties"/>

    <!--2、settings包含很多重要的设置项-->
    <settings>
        <!--
            指定当插入空值时，映射成怎样的 JdbcType。全部Type参考 java.sql.JdbcType.。
            Oracle不支持 JdbcType.Other，插入空值会报错，所以这里改为 JdbcType.NULL。
        -->
        <setting name="jdbcTypeForNull" value="NULL"/>
        <!--显示的指定每个我们需要更改的配置的值，即使他是默认的。防止版本更新带来的问题  -->
        <setting name="lazyLoadingEnabled" value="true"/>
        <setting name="aggressiveLazyLoading" value="false"/>
        <setting name="logImpl" value="STDOUT_LOGGING"/>
    </settings>

    <!--
    3、typeAliases：别名处理器：可以为我们的java类型起别名，别名不区分大小写
    -->
    <typeAliases>
        <!-- 配置该包以其子包下所有类，别名将配置为类名-->
        <package name="me.ztiany.mybatis.pojo"/>
    </typeAliases>

    <!--
    4、environments：环境们，mybatis 可以配置多种环境，default 指定使用某种环境，可以达到快速切换环境。

                environment：配置一个具体的环境信息，必须有两个标签，id代表当前环境的唯一标识
                    transactionManager：事务管理器。
                        type：事务管理器的类型，JDBC(JdbcTransactionFactory) 或者 MANAGED(ManagedTransactionFactory)
                            自定义事务管理器：实现 TransactionFactory 接口，type 指定为全类名

                    dataSource：数据源。
                        type：数据源类型，可选择：
                                UNPOOLED(UnpooledDataSourceFactory)
                                POOLED(PooledDataSourceFactory)
                                JNDI(JndiDataSourceFactory)
                                自定义数据源：实现DataSourceFactory接口，type是全类名
    -->
    <!-- 和spring整合后 environments配置将废除-->
    <environments default="dev_mysql">
        <!--mysql环境-->
        <environment id="dev_mysql">
            <!-- 使用jdbc事务管理 -->
            <transactionManager type="JDBC"/>
            <!-- 数据库连接池 -->
            <dataSource type="POOLED">
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>
        <!--oracle环境-->
        <environment id="dev_oracle">
            <transactionManager type="JDBC"/>
            <dataSource type="POOLED">
                <property name="driver" value="${orcl.driver}"/>
                <property name="url" value="${orcl.url}"/>
                <property name="username" value="${orcl.username}"/>
                <property name="password" value="${orcl.password}"/>
            </dataSource>
        </environment>
    </environments>

    <!--
        5、databaseIdProvider：支持多数据库厂商的。
                作用就是得到数据库厂商的标识(驱动getDatabaseProductName())，mybatis就能根据数据库厂商标识来执行不同的sql。
                常见SQL厂商名称：MySQL，Oracle，SQL Server
    -->
    <databaseIdProvider type="DB_VENDOR">
        <!-- 为不同的数据库厂商起别名 -->
        <property name="MySQL" value="mysql"/>
        <property name="Oracle" value="oracle"/>
        <property name="SQL Server" value="sqlserver"/>
    </databaseIdProvider>

    <!-- 6、将sql映射注册到全局配置中 -->
    <mappers>
        <!--注册指定包下的所有mapper接口，此种方法要求mapper接口名称和mapper映射文件名称相同，且放在同一个目录中。-->
        <package name="me.ztiany.mybatis.mapper"/>
    </mappers>

</configuration>